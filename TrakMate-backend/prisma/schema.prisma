generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
}

enum Role {
  Pilot
  Admin
}

// Model redenumit din User în AppUser
model AppUser {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String   @map("firstName")
  lastName  String   @map("lastName")
  password  String
  role      Role     @default(Pilot)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Referință schimbată la noul model
  times     TimeRecord[]

  // MAPARE LA NOUL NUME DE TABELĂ
  @@map("app_user") 
}

model Circuit {
  id        Int      @id @default(autoincrement())
  name      String
  km        Float
  country   String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Referință schimbată la noul model
  times     TimeRecord[]
}

// Model redenumit din Time în TimeRecord
model TimeRecord {
  id          Int      @id @default(autoincrement())
  pilotId     Int
  circuitId   Int
  lapTimeMs   Int
  createdAt   DateTime @default(now())

  // Referința schimbată la noul model AppUser
  pilot       AppUser  @relation(fields: [pilotId], references: [id], onDelete: Cascade)
  circuit     Circuit  @relation(fields: [circuitId], references: [id], onDelete: Cascade)

  // MAPARE LA NOUL NUME DE TABELĂ
  @@map("time_records") 
}